<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">
<!--    SpringMVC思想是有一个前端控制器能拦截所有请求，并智能派发
        这个前端控制器是一个servlet，应该在web.xml中配置这个servlet来拦截所有请求-->
    <servlet>
        <servlet-name>dispatcherServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
<!--            指定SpringMVC配置文件位置-->
            <param-name>contextConfigLocation</param-name>
            <param-value>/WEB-INF/mvc-config.xml</param-value>
        </init-param>
<!--        servlet启动加载，原本是第一次访问是创建对象，如果加上则是在启动的时候创建对象，值越小，优先级越高，越先创建对象-->
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>dispatcherServlet</servlet-name>
<!--        /：拦截所有请求，不拦截jsp页面，*.jsp请求
            /*：拦截所有请求，拦截jsp页面，.jsp请求

            处理*.jsp是tomcat做的事，所有项目的web.xml继承于tomcat的web.xml

            tomcat服务器的web.xml中有一个DefaultServlet是url-pattern=/，DefaultServlet是tomcat中处理静态资源的，除过jsp和servlet，剩下的都是静态资源：.html是静态资源
            我们的配置中，前端控制器url-pattern=/，把tomcat服务器的DefaultServlet禁用了，就无法处理静态资源

            JspServlet没有被继承，没有拦截.jsp页面

            写/也是为了迎合REST风格的URL地址
-->
        <url-pattern>/</url-pattern>
    </servlet-mapping>

<!--    配置一个字符编码的filter，转乱码*********一般都在其他filter之前，先转码，再获取参数等其他信息
        使用SpringMVC前端控制器时，写完配置就直接可以写字符编码过滤器
        tomcat安装时就改server.xml的编码 URLEncoding="UTF-8"
-->
    <filter>
        <filter-name>characterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
<!--        encoding：指定解决POST请求乱码-->
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
<!--        forceEncoding：解决响应乱码-->
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>characterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
</web-app>